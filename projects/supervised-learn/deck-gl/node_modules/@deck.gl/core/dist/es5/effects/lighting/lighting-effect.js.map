{"version":3,"sources":["../../../../src/effects/lighting/lighting-effect.js"],"names":["DEFAULT_AMBIENT_LIGHT_PROPS","color","intensity","DEFAULT_DIRECTIONAL_LIGHT_PROPS","direction","DEFAULT_SHADOW_COLOR","LightingEffect","props","ambientLight","directionalLights","pointLights","shadowColor","shadowPasses","dummyShadowMap","shadow","key","lightSource","type","push","_applyDefaultLights","some","light","_addShadowModule","gl","layers","viewports","onViewportActive","views","pixelRatio","shadowMatrices","_createLightMatrix","length","_createShadowPasses","Texture2D","width","height","shadowMaps","i","shadowPass","render","filter","layer","shadowEnabled","effectProps","shadowLightId","shadowMap","_getProjectedPointLights","_getProjectedDirectionalLights","lightSources","delete","_removeShadowModule","lightMatrices","viewMatrix","Matrix4","lookAt","eye","Vector3","negate","ShadowPass","defaultShaderModules","hasShadowModule","module","name","splice","AmbientLight","DirectionalLight","projectedPointLights","pointLight","getProjectedLight","projectedDirectionalLights","directionalLight","Effect"],"mappings":"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","sourcesContent":["import {\n  AmbientLight,\n  Texture2D,\n  setDefaultShaderModules,\n  getDefaultShaderModules\n} from '@luma.gl/core';\nimport DirectionalLight from './directional-light';\nimport Effect from '../../lib/effect';\nimport {Matrix4, Vector3} from 'math.gl';\nimport ShadowPass from '../../passes/shadow-pass';\nimport {default as shadow} from '../../shaderlib/shadow/shadow';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {color: [255, 255, 255], intensity: 1.0};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255],\n    intensity: 1.0,\n    direction: [-1, -3, -1]\n  },\n  {\n    color: [255, 255, 255],\n    intensity: 0.9,\n    direction: [1, 8, -2.5]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect extends Effect {\n  constructor(props) {\n    super(props);\n    this.ambientLight = null;\n    this.directionalLights = [];\n    this.pointLights = [];\n\n    this.shadowColor = DEFAULT_SHADOW_COLOR;\n    this.shadowPasses = [];\n    this.dummyShadowMap = null;\n    this.shadow = false;\n\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    if (this.directionalLights.some(light => light.shadow)) {\n      this.shadow = true;\n      this._addShadowModule();\n    }\n  }\n\n  prepare(gl, {layers, viewports, onViewportActive, views, pixelRatio}) {\n    if (!this.shadow) return {};\n\n    // create light matrix every frame to make sure always updated from light source\n    const shadowMatrices = this._createLightMatrix();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl, pixelRatio);\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    const shadowMaps = [];\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers: layers.filter(layer => layer.props.shadowEnabled !== false),\n        viewports,\n        onViewportActive,\n        views,\n        effectProps: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices\n        }\n      });\n      shadowMaps.push(shadowPass.shadowMap);\n    }\n\n    return {\n      shadowMaps,\n      dummyShadowMap: this.dummyShadowMap,\n      shadowColor: this.shadowColor,\n      shadowMatrices\n    };\n  }\n\n  getParameters(layer) {\n    const {ambientLight} = this;\n    const pointLights = this._getProjectedPointLights(layer);\n    const directionalLights = this._getProjectedDirectionalLights(layer);\n    return {\n      lightSources: {ambientLight, directionalLights, pointLights}\n    };\n  }\n\n  cleanup() {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow) {\n      this._removeShadowModule();\n    }\n  }\n\n  _createLightMatrix() {\n    const lightMatrices = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  _createShadowPasses(gl, pixelRatio) {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      this.shadowPasses.push(new ShadowPass(gl, {pixelRatio}));\n    }\n  }\n\n  _addShadowModule() {\n    const defaultShaderModules = getDefaultShaderModules();\n    let hasShadowModule = false;\n    for (const module of defaultShaderModules) {\n      if (module.name === `shadow`) {\n        hasShadowModule = true;\n        break;\n      }\n    }\n    if (!hasShadowModule) {\n      defaultShaderModules.push(shadow);\n      setDefaultShaderModules(defaultShaderModules);\n    }\n  }\n\n  _removeShadowModule() {\n    const defaultShaderModules = getDefaultShaderModules();\n    for (let i = 0; i < defaultShaderModules.length; i++) {\n      if (defaultShaderModules[i].name === `shadow`) {\n        defaultShaderModules.splice(i, 1);\n        setDefaultShaderModules(defaultShaderModules);\n        break;\n      }\n    }\n  }\n\n  _applyDefaultLights() {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]));\n      this.directionalLights.push(new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1]));\n    }\n  }\n\n  _getProjectedPointLights(layer) {\n    const projectedPointLights = [];\n\n    for (let i = 0; i < this.pointLights.length; i++) {\n      const pointLight = this.pointLights[i];\n      projectedPointLights.push(pointLight.getProjectedLight({layer}));\n    }\n    return projectedPointLights;\n  }\n\n  _getProjectedDirectionalLights(layer) {\n    const projectedDirectionalLights = [];\n\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const directionalLight = this.directionalLights[i];\n      projectedDirectionalLights.push(directionalLight.getProjectedLight({layer}));\n    }\n    return projectedDirectionalLights;\n  }\n}\n"],"file":"lighting-effect.js"}