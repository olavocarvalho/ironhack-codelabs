{"version":3,"sources":["../../../../src/effects/lighting/lighting-effect.js"],"names":["AmbientLight","Texture2D","setDefaultShaderModules","getDefaultShaderModules","DirectionalLight","Effect","Matrix4","Vector3","ShadowPass","default","shadow","DEFAULT_AMBIENT_LIGHT_PROPS","color","intensity","DEFAULT_DIRECTIONAL_LIGHT_PROPS","direction","DEFAULT_SHADOW_COLOR","LightingEffect","constructor","props","ambientLight","directionalLights","pointLights","shadowColor","shadowPasses","dummyShadowMap","key","lightSource","type","push","_applyDefaultLights","some","light","_addShadowModule","prepare","gl","layers","viewports","onViewportActive","views","pixelRatio","shadowMatrices","_createLightMatrix","length","_createShadowPasses","width","height","shadowMaps","i","shadowPass","render","filter","layer","shadowEnabled","effectProps","shadowLightId","shadowMap","getParameters","_getProjectedPointLights","_getProjectedDirectionalLights","lightSources","cleanup","delete","_removeShadowModule","lightMatrices","viewMatrix","lookAt","eye","negate","defaultShaderModules","hasShadowModule","module","name","splice","projectedPointLights","pointLight","getProjectedLight","projectedDirectionalLights","directionalLight"],"mappings":"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","sourcesContent":["import {\n  AmbientLight,\n  Texture2D,\n  setDefaultShaderModules,\n  getDefaultShaderModules\n} from '@luma.gl/core';\nimport DirectionalLight from './directional-light';\nimport Effect from '../../lib/effect';\nimport {Matrix4, Vector3} from 'math.gl';\nimport ShadowPass from '../../passes/shadow-pass';\nimport {default as shadow} from '../../shaderlib/shadow/shadow';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {color: [255, 255, 255], intensity: 1.0};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255],\n    intensity: 1.0,\n    direction: [-1, -3, -1]\n  },\n  {\n    color: [255, 255, 255],\n    intensity: 0.9,\n    direction: [1, 8, -2.5]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect extends Effect {\n  constructor(props) {\n    super(props);\n    this.ambientLight = null;\n    this.directionalLights = [];\n    this.pointLights = [];\n\n    this.shadowColor = DEFAULT_SHADOW_COLOR;\n    this.shadowPasses = [];\n    this.dummyShadowMap = null;\n    this.shadow = false;\n\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    if (this.directionalLights.some(light => light.shadow)) {\n      this.shadow = true;\n      this._addShadowModule();\n    }\n  }\n\n  prepare(gl, {layers, viewports, onViewportActive, views, pixelRatio}) {\n    if (!this.shadow) return {};\n\n    // create light matrix every frame to make sure always updated from light source\n    const shadowMatrices = this._createLightMatrix();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl, pixelRatio);\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    const shadowMaps = [];\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers: layers.filter(layer => layer.props.shadowEnabled !== false),\n        viewports,\n        onViewportActive,\n        views,\n        effectProps: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices\n        }\n      });\n      shadowMaps.push(shadowPass.shadowMap);\n    }\n\n    return {\n      shadowMaps,\n      dummyShadowMap: this.dummyShadowMap,\n      shadowColor: this.shadowColor,\n      shadowMatrices\n    };\n  }\n\n  getParameters(layer) {\n    const {ambientLight} = this;\n    const pointLights = this._getProjectedPointLights(layer);\n    const directionalLights = this._getProjectedDirectionalLights(layer);\n    return {\n      lightSources: {ambientLight, directionalLights, pointLights}\n    };\n  }\n\n  cleanup() {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow) {\n      this._removeShadowModule();\n    }\n  }\n\n  _createLightMatrix() {\n    const lightMatrices = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  _createShadowPasses(gl, pixelRatio) {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      this.shadowPasses.push(new ShadowPass(gl, {pixelRatio}));\n    }\n  }\n\n  _addShadowModule() {\n    const defaultShaderModules = getDefaultShaderModules();\n    let hasShadowModule = false;\n    for (const module of defaultShaderModules) {\n      if (module.name === `shadow`) {\n        hasShadowModule = true;\n        break;\n      }\n    }\n    if (!hasShadowModule) {\n      defaultShaderModules.push(shadow);\n      setDefaultShaderModules(defaultShaderModules);\n    }\n  }\n\n  _removeShadowModule() {\n    const defaultShaderModules = getDefaultShaderModules();\n    for (let i = 0; i < defaultShaderModules.length; i++) {\n      if (defaultShaderModules[i].name === `shadow`) {\n        defaultShaderModules.splice(i, 1);\n        setDefaultShaderModules(defaultShaderModules);\n        break;\n      }\n    }\n  }\n\n  _applyDefaultLights() {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]));\n      this.directionalLights.push(new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1]));\n    }\n  }\n\n  _getProjectedPointLights(layer) {\n    const projectedPointLights = [];\n\n    for (let i = 0; i < this.pointLights.length; i++) {\n      const pointLight = this.pointLights[i];\n      projectedPointLights.push(pointLight.getProjectedLight({layer}));\n    }\n    return projectedPointLights;\n  }\n\n  _getProjectedDirectionalLights(layer) {\n    const projectedDirectionalLights = [];\n\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const directionalLight = this.directionalLights[i];\n      projectedDirectionalLights.push(directionalLight.getProjectedLight({layer}));\n    }\n    return projectedDirectionalLights;\n  }\n}\n"],"file":"lighting-effect.js"}