{"version":3,"sources":["../../../src/lib/composite-layer.js"],"names":["Layer","log","flatten","CompositeLayer","isComposite","getSubLayers","internalState","subLayers","initializeState","setState","updateObject","setLayerNeedsUpdate","getPickingInfo","info","object","isDataWrapped","__source","parent","id","Object","assign","index","renderLayers","shouldRenderSubLayer","data","overridingProps","props","_subLayerProps","length","getSubLayerClass","DefaultLayerClass","type","getSubLayerRow","row","sourceObject","sourceObjectIndex","getSubLayerAccessor","accessor","objectInfo","target","x","i","getSubLayerProps","sublayerProps","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","newProps","overridingSublayerProps","overridingSublayerTriggers","updateTriggers","all","extension","passThroughProps","call","_getAttributeManager","_renderLayers","needsUpdate","filter","Boolean","layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer from './layer';\nimport log from '../utils/log';\nimport {flatten} from '../utils/flatten';\n\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  getSubLayers() {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  initializeState() {}\n\n  // Updates selected state members and marks the composite layer to need rerender\n  setState(updateObject) {\n    super.setState(updateObject);\n    this.setLayerNeedsUpdate();\n  }\n\n  // called to augment the info object that is bubbled up from a sublayer\n  // override Layer.getPickingInfo() because decoding / setting uniform do\n  // not apply to a composite layer.\n  // @return null to cancel event\n  getPickingInfo({info}) {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    return Object.assign(info, {\n      // override object with picked data\n      object: object.__source.object,\n      index: object.__source.index\n    });\n  }\n\n  // Implement to generate subLayers\n  renderLayers() {\n    return null;\n  }\n\n  // Returns true if sub layer needs to be rendered\n  shouldRenderSubLayer(id, data) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (data && data.length) || (overridingProps && overridingProps[id]);\n  }\n\n  // Returns sub layer class for a specific sublayer\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps && overridingProps[id] && overridingProps[id].type) || DefaultLayerClass\n    );\n  }\n\n  // When casting user data into another format to pass to sublayers,\n  // add reference to the original object and object index\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  // Some composite layers cast user data into another format before passing to sublayers\n  // We need to unwrap them before calling the accessor so that they see the original data\n  // objects\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n        return accessor(x, i);\n      };\n    }\n    return accessor;\n  }\n\n  // Returns sub layer props for a specific sublayer\n  getSubLayerProps(sublayerProps) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions\n    };\n\n    if (sublayerProps) {\n      const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n      const overridingSublayerTriggers =\n        overridingSublayerProps && overridingSublayerProps.updateTriggers;\n      Object.assign(\n        newProps,\n        sublayerProps,\n        // experimental feature that allows users to override sublayer props via parent layer prop\n        overridingSublayerProps,\n        {\n          id: `${this.props.id}-${sublayerProps.id}`,\n          updateTriggers: Object.assign(\n            {\n              all: this.props.updateTriggers.all\n            },\n            sublayerProps.updateTriggers,\n            overridingSublayerTriggers\n          )\n        }\n      );\n    }\n\n    // Pass through extension props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      Object.assign(newProps, passThroughProps, {\n        updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n      });\n    }\n\n    return newProps;\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  // Called by layer manager to render subLayers\n  _renderLayers() {\n    let {subLayers} = this.internalState;\n    if (subLayers && !this.needsUpdate()) {\n      log.log(3, `Composite layer reused subLayers ${this}`, this.internalState.subLayers)();\n    } else {\n      subLayers = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayers, {filter: Boolean});\n      this.internalState.subLayers = subLayers;\n      log.log(2, `Composite layer rendered new subLayers ${this}`, subLayers)();\n    }\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n\nCompositeLayer.layerName = 'CompositeLayer';\n"],"file":"composite-layer.js"}