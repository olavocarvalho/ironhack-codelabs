{"version":3,"sources":["../../../../src/tile-layer/utils/tile.js"],"names":["tile2latLng","x","y","z","lng","Math","pow","n","PI","lat","atan","exp","tile2boundingBox","west","north","east","south","Tile","constructor","getTileData","onTileError","bbox","isVisible","_data","_isLoaded","_loader","_loadData","data","isLoaded","Promise","resolve","then","buffers","catch","err","isOverlapped","tile","m","floor"],"mappings":"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","sourcesContent":["// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nexport function tile2latLng(x, y, z) {\n  const lng = (x / Math.pow(2, z)) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, z);\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nexport function tile2boundingBox(x, y, z) {\n  const [west, north] = tile2latLng(x, y, z);\n  const [east, south] = tile2latLng(x + 1, y + 1, z);\n  return {west, north, east, south};\n}\n\nexport default class Tile {\n  constructor({getTileData, x, y, z, onTileError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.bbox = tile2boundingBox(this.x, this.y, this.z);\n    this.isVisible = true;\n    this.getTileData = getTileData;\n    this._data = null;\n    this._isLoaded = false;\n    this._loader = this._loadData();\n    this.onTileError = onTileError;\n  }\n\n  get data() {\n    return this._data || this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  _loadData() {\n    const {x, y, z, bbox} = this;\n    if (!this.getTileData) {\n      return null;\n    }\n\n    return Promise.resolve(this.getTileData({x, y, z, bbox}))\n      .then(buffers => {\n        this._data = buffers;\n        this._isLoaded = true;\n        return buffers;\n      })\n      .catch(err => {\n        this._isLoaded = true;\n        this.onTileError(err);\n      });\n  }\n\n  isOverlapped(tile) {\n    const {x, y, z} = this;\n    const m = Math.pow(2, tile.z - z);\n    return Math.floor(tile.x / m) === x && Math.floor(tile.y / m) === y;\n  }\n}\n"],"file":"tile.js"}