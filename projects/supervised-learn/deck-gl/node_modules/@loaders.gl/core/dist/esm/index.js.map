{"version":3,"sources":["../../src/index.js"],"names":["parse","parseSync","fetchFile","load","resolvePath","global","path","setPathPrefix","getPathPrefix","readFileSync","writeFile","writeFileSync","getErrorMessageFromResponseSync","_getErrorMessageFromResponseSync","getErrorMessageFromResponse","_getErrorMessageFromResponse","registerLoaders","parseInBatches","parseInBatchesSync","loadInBatches","encode","encodeSync","encodeInBatches","save","saveSync","isPromise","isIterable","isAsyncIterable","isIterator","isFetchResponse","isReadableStream","isWritableStream","toArrayBuffer","getStreamIterator","forEach","concatenateAsyncIterator","lineAsyncIterator","textDecoderAsyncIterator","numberedLineAsyncIterator","isBrowser","self","window","document","default","assert","TextEncoder","TextDecoder","createReadStream","url","options","console","warn","response","body","parseFile","parseFileSync","loadFile"],"mappings":";;AAAA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,aAA/B;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAO,KAAKC,IAAZ,MAAsB,iBAAtB;AAIA,SAAQA,IAAR;AAGA,SAAQC,aAAR,EAAuBC,aAAvB,EAAsCJ,WAAtC,QAAwD,6BAAxD;AACA,SAAQF,SAAR,QAAwB,wBAAxB;AACA,SAAQO,YAAR,QAA2B,uBAA3B;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,wBAAvC;AACA,SACEC,+BAA+B,IAAIC,gCADrC,EAEEC,2BAA2B,IAAIC,4BAFjC,QAGO,iCAHP;AAMA,SAAQC,eAAR,QAA8B,wBAA9B;AAGA,SAAQhB,KAAR,EAAeC,SAAf,EAA0BgB,cAA1B,EAA0CC,kBAA1C,QAAmE,aAAnE;AACA,SAAQf,IAAR,EAAcgB,aAAd,QAAkC,YAAlC;AAGA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,eAA5B,QAAkD,cAAlD;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,YAA7B;AAGA,SACEC,SADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,UAJF,EAKEC,eALF,EAMEC,gBANF,EAOEC,gBAPF,QAQO,4BARP;AAUA,SAAQC,aAAR,QAA4B,iCAA5B;AAGA,SAAQC,iBAAR,QAAgC,iCAAhC;AAEA,SACEC,OADF,EAEEC,wBAFF,EAGEC,iBAHF,EAIEC,wBAJF,EAKEC,yBALF,QAMO,yCANP;AASA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCpC,MAAjC,EAAyCqC,QAAzC,QAAwD,iBAAxD;AACA,SAAQC,OAAO,IAAIC,MAAnB,QAAgC,gBAAhC;AAKA,OAAO,IAAMC,WAAW,GAAGxC,MAAM,CAACwC,WAA3B;AACP,OAAO,IAAMC,WAAW,GAAGzC,MAAM,CAACyC,WAA3B;AAGP,gBAAsBC,gBAAtB;AAAA;AAAA;;;iEAAO,iBAAgCC,GAAhC,EAAqCC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,YAAAA,OAAO,CAACC,IAAR,CAAa,oEAAb;AACAH,YAAAA,GAAG,GAAG5C,WAAW,CAAC4C,GAAD,CAAjB;AAHK;AAAA,mBAIkB9C,SAAS,CAAC8C,GAAD,EAAMC,OAAN,CAJ3B;;AAAA;AAICG,YAAAA,QAJD;AAAA,6CAKEA,QAAQ,CAACC,IALX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAQP,OAAO,SAASC,SAAT,GAA4B;AACjCJ,EAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb;AACA,SAAOnD,KAAK,MAAL,mBAAP;AACD;AAED,OAAO,SAASuD,aAAT,GAAgC;AACrCL,EAAAA,OAAO,CAACC,IAAR,CAAa,yCAAb;AACA,SAAOlD,SAAS,MAAT,mBAAP;AACD;AAED,OAAO,SAASuD,QAAT,GAA2B;AAChCN,EAAAA,OAAO,CAACC,IAAR,CAAa,mCAAb;AACA,SAAOhD,IAAI,MAAJ,mBAAP;AACD","sourcesContent":["import {parse, parseSync} from './lib/parse';\nimport {fetchFile} from './lib/fetch/fetch-file';\nimport {load} from './lib/load';\nimport {resolvePath} from './lib/fetch/file-aliases';\nimport {global} from './utils/globals';\nimport * as path from './lib/path/path';\n\n// PATH\n\nexport {path};\n\n// FILE READING AND WRITING\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/fetch/file-aliases.js';\nexport {fetchFile} from './lib/fetch/fetch-file';\nexport {readFileSync} from './lib/fetch/read-file';\nexport {writeFile, writeFileSync} from './lib/fetch/write-file';\nexport {\n  getErrorMessageFromResponseSync as _getErrorMessageFromResponseSync,\n  getErrorMessageFromResponse as _getErrorMessageFromResponse\n} from './lib/fetch/fetch-error-message';\n\n// FILE PARSING AND ENCODING\nexport {registerLoaders} from './lib/register-loaders';\n\n// LOADING (READING + PARSING)\nexport {parse, parseSync, parseInBatches, parseInBatchesSync} from './lib/parse';\nexport {load, loadInBatches} from './lib/load';\n\n// ENCODING AND SAVING\nexport {encode, encodeSync, encodeInBatches} from './lib/encode';\nexport {save, saveSync} from './lib/save';\n\n// \"JAVASCRIPT\" UTILS\nexport {\n  isPromise,\n  isIterable,\n  isAsyncIterable,\n  isIterator,\n  isFetchResponse,\n  isReadableStream,\n  isWritableStream\n} from './javascript-utils/is-type';\n\nexport {toArrayBuffer} from './javascript-utils/binary-utils';\n\n// ITERATOR UTILS\nexport {getStreamIterator} from './javascript-utils/stream-utils';\n\nexport {\n  forEach,\n  concatenateAsyncIterator,\n  lineAsyncIterator,\n  textDecoderAsyncIterator,\n  numberedLineAsyncIterator\n} from './javascript-utils/async-iterator-utils';\n\n// CORE UTILS\nexport {isBrowser, self, window, global, document} from './utils/globals';\nexport {default as assert} from './utils/assert';\n\n// DEPRECATED\n\n// Use @loaders.gl/polyfills and global symbols instead\nexport const TextEncoder = global.TextEncoder;\nexport const TextDecoder = global.TextDecoder;\n\n// Returns a promise that resolves to a readable stream\nexport async function createReadStream(url, options) {\n  // eslint-disable-next-line\n  console.warn('createReadStream() deprecated, use fetch().then(resp => resp.body)');\n  url = resolvePath(url);\n  const response = await fetchFile(url, options);\n  return response.body;\n}\n\nexport function parseFile(...args) {\n  console.warn('parse() deprecated, use parse()'); // eslint-disable-line\n  return parse(...args);\n}\n\nexport function parseFileSync(...args) {\n  console.warn('parseSync() deprecated, use parseSync()'); // eslint-disable-line\n  return parseSync(...args);\n}\n\nexport function loadFile(...args) {\n  console.warn('loadFile() deprecated, use load()'); // eslint-disable-line\n  return load(...args);\n}\n"],"file":"index.js"}