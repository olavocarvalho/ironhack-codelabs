{"version":3,"sources":["../../../src/shaderlib/index.js"],"names":["registerShaderModules","setDefaultShaderModules","createShaderHook","createModuleInjection","fp32","picking","gouraudlighting","phonglighting","geometry","project","project32","project64","shadow","initializeShaderModules","hook","order","injection"],"mappings":"AAoBA,SACEA,qBADF,EAEEC,uBAFF,EAGEC,gBAHF,EAIEC,qBAJF,QAKO,eALP;AAMA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,eAAvB,EAAwCC,aAAxC,QAA4D,eAA5D;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,SAASC,uBAAT,GAAmC;AACxCb,EAAAA,qBAAqB,CAAC,CAACI,IAAD,EAAOK,OAAP,EAAgBC,SAAhB,EAA2BJ,eAA3B,EAA4CC,aAA5C,EAA2DF,OAA3D,CAAD,CAArB;AAEAJ,EAAAA,uBAAuB,CAAC,CAACO,QAAD,EAAWC,OAAX,CAAD,CAAvB;AAEAP,EAAAA,gBAAgB,CAAC,iEAAD,CAAhB;AACAA,EAAAA,gBAAgB,CAAC,4EAAD,CAAhB;AACAA,EAAAA,gBAAgB,CAAC,mEAAD,CAAhB;AACAA,EAAAA,gBAAgB,CAAC,qEAAD,CAAhB;AAEAC,EAAAA,qBAAqB,CAAC,SAAD,EAAY;AAC/BW,IAAAA,IAAI,EAAE,wBADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,SAAS;AAHsB,GAAZ,CAArB;AAWD;AAED,SAAQX,OAAR,EAAiBI,OAAjB,EAA0BE,SAA1B,EAAqCL,eAArC,EAAsDC,aAAtD,EAAqEK,MAArE","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  registerShaderModules,\n  setDefaultShaderModules,\n  createShaderHook,\n  createModuleInjection\n} from '@luma.gl/core';\nimport {fp32, picking, gouraudlighting, phonglighting} from '@luma.gl/core';\nimport geometry from './misc/geometry';\nimport project from './project/project';\nimport project32 from './project32/project32';\nimport project64 from './project64/project64';\nimport shadow from './shadow/shadow';\n\nexport function initializeShaderModules() {\n  registerShaderModules([fp32, project, project32, gouraudlighting, phonglighting, picking]);\n\n  setDefaultShaderModules([geometry, project]);\n\n  createShaderHook('vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)');\n  createShaderHook('vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)');\n  createShaderHook('vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)');\n  createShaderHook('fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)');\n\n  createModuleInjection('picking', {\n    hook: 'fs:DECKGL_FILTER_COLOR',\n    order: 99,\n    injection: `\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n`\n  });\n}\n\nexport {picking, project, project64, gouraudlighting, phonglighting, shadow};\n"],"file":"index.js"}