{"version":3,"sources":["../../../src/path-layer/path-layer.js"],"names":["Layer","Model","Geometry","PathTesselator","vs","fs","DEFAULT_COLOR","defaultProps","widthUnits","widthScale","type","min","value","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","rounded","miterLimit","dashJustified","billboard","getPath","object","path","getColor","getWidth","getDashArray","ATTRIBUTE_TRANSITION","enter","chunk","length","subarray","PathLayer","getShaders","modules","initializeState","noAlloc","attributeManager","getAttributeManager","addInstanced","startPositions","size","offset","transition","accessor","update","calculateStartPositions","shaderAttributes","instanceLeftPositions","instanceStartPositions","endPositions","calculateEndPositions","instanceEndPositions","instanceRightPositions","instanceLeftStartPositions64xyLow","stride","calculateLeftStartPositions64xyLow","instanceEndRightPositions64xyLow","calculateEndRightPositions64xyLow","instanceTypes","calculateSegmentTypes","instanceStrokeWidths","defaultValue","instanceDashArrays","instanceColors","props","colorFormat","normalized","instancePickingColors","index","target","encodePickingColor","setState","pathTesselator","updateState","oldProps","changeFlags","geometryChanged","dataChanged","updateTriggersChanged","all","state","updateGeometry","data","getGeometry","positionFormat","fp64","use64bitPositions","numInstances","instanceCount","bufferLayout","invalidateAll","extensionsChanged","gl","context","model","delete","_getModel","draw","uniforms","viewport","widthMultiplier","distanceScales","metersPerPixel","setUniforms","Object","assign","jointType","alignMode","SEGMENT_INDICES","SEGMENT_POSITIONS","id","geometry","drawMode","attributes","indices","Uint16Array","positions","Float32Array","isInstanced","shaderCache","attribute","get","isFP64","constant","clearPickingColor","color","pickedPathIndex","decodePickingColor","numVertices","startInstanceIndex","pathIndex","endInstanceIndex","fill","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport PathTesselator from './path-tesselator';\n\nimport vs from './path-layer-vertex.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthUnits: 'meters',\n  widthScale: {type: 'number', min: 0, value: 1}, // stroke width in meters\n  widthMinPixels: {type: 'number', min: 0, value: 0}, //  min stroke width in pixels\n  widthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max stroke width in pixels\n  rounded: false,\n  miterLimit: {type: 'number', min: 0, value: 4},\n  dashJustified: false,\n  billboard: false,\n\n  getPath: {type: 'accessor', value: object => object.path},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getDashArray: {type: 'accessor', value: [0, 0]}\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return super.getShaders({vs, fs, modules: ['project32', 'picking']}); // 'project' module added by default.\n  }\n\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      startPositions: {\n        size: 3,\n        // Hack - Attribute class needs this to properly apply partial update\n        // The first 3 numbers of the value is just padding\n        offset: 12,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateStartPositions,\n        noAlloc,\n        shaderAttributes: {\n          instanceLeftPositions: {\n            offset: 0\n          },\n          instanceStartPositions: {\n            offset: 12\n          }\n        }\n      },\n      endPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateEndPositions,\n        noAlloc,\n        shaderAttributes: {\n          instanceEndPositions: {\n            offset: 0\n          },\n          instanceRightPositions: {\n            offset: 12\n          }\n        }\n      },\n      instanceLeftStartPositions64xyLow: {\n        size: 4,\n        stride: 8,\n        update: this.calculateLeftStartPositions64xyLow,\n        noAlloc\n      },\n      instanceEndRightPositions64xyLow: {\n        size: 4,\n        stride: 8,\n        update: this.calculateEndRightPositions64xyLow,\n        noAlloc\n      },\n      instanceTypes: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        update: this.calculateSegmentTypes,\n        noAlloc\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: 1\n      },\n      instanceDashArrays: {size: 2, accessor: 'getDashArray'},\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {\n        size: 3,\n        type: GL.UNSIGNED_BYTE,\n        accessor: (object, {index, target: value}) => this.encodePickingColor(index, value)\n      }\n    });\n    /* eslint-enable max-len */\n\n    this.setState({\n      pathTesselator: new PathTesselator({})\n    });\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const attributeManager = this.getAttributeManager();\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      const {pathTesselator} = this.state;\n      pathTesselator.updateGeometry({\n        data: props.data,\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        fp64: this.use64bitPositions(),\n        dataChanged: changeFlags.dataChanged\n      });\n      this.setState({\n        numInstances: pathTesselator.instanceCount,\n        bufferLayout: pathTesselator.bufferLayout\n      });\n      if (!changeFlags.dataChanged) {\n        // Base `layer.updateState` only invalidates all attributes on data change\n        // Cover the rest of the scenarios here\n        attributeManager.invalidateAll();\n      }\n    }\n\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      attributeManager.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {\n      rounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      dashJustified\n    } = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.distanceScales.metersPerPixel[2] : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          jointType: Number(rounded),\n          billboard,\n          alignMode: Number(dashJustified),\n          widthScale: widthScale * widthMultiplier,\n          miterLimit,\n          widthMinPixels,\n          widthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    const SEGMENT_INDICES = [\n      // start corner\n      0,\n      2,\n      1,\n      // body\n      1,\n      2,\n      4,\n      1,\n      4,\n      3,\n      // end corner\n      3,\n      4,\n      5\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center, 1: right\n    // [2] role - 0: offset point 1: joint point\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0,\n      0,\n      1,\n      // start inner corner\n      0,\n      -1,\n      0,\n      // start outer corner\n      0,\n      1,\n      0,\n      // end inner corner\n      1,\n      -1,\n      0,\n      // end outer corner\n      1,\n      1,\n      0,\n      // bevel end corner\n      1,\n      0,\n      1\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: new Float32Array(SEGMENT_POSITIONS)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateStartPositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('startPositions');\n  }\n\n  calculateEndPositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('endPositions');\n  }\n\n  calculateSegmentTypes(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('segmentTypes');\n  }\n\n  calculateLeftStartPositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (isFP64) {\n      attribute.value = this.state.pathTesselator.get('startPositions64XyLow');\n    } else {\n      attribute.value = new Float32Array(4);\n    }\n  }\n\n  calculateEndRightPositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (isFP64) {\n      attribute.value = this.state.pathTesselator.get('endPositions64XyLow');\n    } else {\n      attribute.value = new Float32Array(4);\n    }\n  }\n\n  clearPickingColor(color) {\n    const pickedPathIndex = this.decodePickingColor(color);\n    const {bufferLayout} = this.state.pathTesselator;\n    const numVertices = bufferLayout[pickedPathIndex];\n\n    let startInstanceIndex = 0;\n    for (let pathIndex = 0; pathIndex < pickedPathIndex; pathIndex++) {\n      startInstanceIndex += bufferLayout[pathIndex];\n    }\n\n    const {instancePickingColors} = this.getAttributeManager().attributes;\n\n    const {value} = instancePickingColors;\n    const endInstanceIndex = startInstanceIndex + numVertices;\n    value.fill(0, startInstanceIndex * 3, endInstanceIndex * 3);\n    instancePickingColors.update({value});\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n"],"file":"path-layer.js"}