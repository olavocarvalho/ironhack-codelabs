{"version":3,"sources":["../../../src/scenegraph-layer/scenegraph-layer.js"],"names":["Layer","createIterable","fp64LowPart","ScenegraphNode","isWebGL2","pbr","log","createGLTFObjects","waitForGLTFAssets","MATRIX_ATTRIBUTES","vs","fs","DEFAULT_COLOR","defaultProps","scenegraph","type","value","async","getScene","gltf","scenes","scene","getAnimator","animator","_animations","sizeScale","min","getPosition","x","position","getColor","_lighting","_imageBasedLightingEnvironment","getOrientation","getScale","getTranslation","getTransformMatrix","ScenegraphLayer","attributeManager","getAttributeManager","addInstanced","instancePositions","size","accessor","transition","instancePositions64xy","update","calculateInstancePositions64xyLow","instanceColors","props","colorFormat","length","normalized","defaultValue","instanceModelMatrix","params","oldProps","_updateScenegraph","_applyAnimationsProp","state","_deleteScenegraph","gl","context","scenegraphData","gltfObjects","getLoadOptions","Object","assign","then","setNeedsRedraw","deprecated","options","layer","_applyAllAttributes","setState","warn","attributesAvailable","allAttributes","getAttributes","traverse","model","_setModelAttributes","animationsProp","animations","getAnimations","keys","sort","forEach","key","animation","Number","isFinite","number","findResult","find","name","delete","source","modules","push","env","waitForFullLoad","imageBasedLightingEnvironment","modelOptions","addVersionToShader","isInstanced","useTangents","changedAttributes","moduleParameters","parameters","animate","animationProps","time","numInstances","getNumInstances","worldMatrix","setInstanceCount","updateModuleSettings","draw","uniforms","sceneModelMatrix","u_Camera","program","project_uCameraPosition","attribute","startRow","endRow","isFP64","use64bitPositions","constant","Float32Array","data","i","iterable","objectInfo","point","index","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, createIterable, fp64LowPart} from '@deck.gl/core';\nimport {ScenegraphNode, isWebGL2, pbr, log} from '@luma.gl/core';\nimport {createGLTFObjects} from '@luma.gl/addons';\nimport GL from '@luma.gl/constants';\nimport {waitForGLTFAssets} from './gltf-utils';\n\nimport {MATRIX_ATTRIBUTES} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [255, 255, 255, 255];\n\nconst defaultProps = {\n  scenegraph: {type: 'object', value: null, async: true},\n  getScene: gltf => {\n    if (gltf && gltf.scenes) {\n      // gltf post processor replaces `gltf.scene` number with the scene `object`\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n    return gltf;\n  },\n  getAnimator: scenegraph => scenegraph && scenegraph.animator,\n  _animations: null,\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // flat or pbr\n  _lighting: 'flat',\n  // _lighting must be pbr for this to work\n  _imageBasedLightingEnvironment: null,\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []}\n};\n\nexport default class ScenegraphLayer extends Layer {\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        accessor: 'getPosition',\n        transition: true\n      },\n      instancePositions64xy: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: this.props.colorFormat.length,\n        accessor: 'getColor',\n        normalized: true,\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      this._updateScenegraph(props);\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    this._deleteScenegraph();\n  }\n\n  _updateScenegraph(props) {\n    const {gl} = this.context;\n    let scenegraphData;\n    if (props.scenegraph instanceof ScenegraphNode) {\n      // Signature 1: props.scenegraph is a proper luma.gl Scenegraph\n      scenegraphData = {scenes: [props.scenegraph]};\n    } else if (props.scenegraph && !props.scenegraph.gltf) {\n      // Converts loaders.gl gltf to luma.gl scenegraph using the undocumented @luma.gl/addons function\n      const gltf = props.scenegraph;\n      const gltfObjects = createGLTFObjects(gl, gltf, this.getLoadOptions());\n      scenegraphData = Object.assign({gltf}, gltfObjects);\n\n      waitForGLTFAssets(gltfObjects).then(() => this.setNeedsRedraw());\n    } else {\n      // DEPRECATED PATH: Assumes this data was loaded through GLTFScenegraphLoader\n      log.deprecated(\n        'ScenegraphLayer.props.scenegraph',\n        'Use GLTFLoader instead of GLTFScenegraphLoader'\n      );\n      scenegraphData = props.scenegraph;\n    }\n\n    const options = {layer: this, gl};\n    const scenegraph = props.getScene(scenegraphData, options);\n    const animator = props.getAnimator(scenegraphData, options);\n\n    if (scenegraph instanceof ScenegraphNode) {\n      this._deleteScenegraph();\n      this._applyAllAttributes(scenegraph);\n      this._applyAnimationsProp(scenegraph, animator, props._animations);\n      this.setState({scenegraph, animator});\n    } else if (scenegraph !== null) {\n      log.warn('invalid scenegraph:', scenegraph)();\n    }\n  }\n\n  _applyAllAttributes(scenegraph) {\n    if (this.state.attributesAvailable) {\n      const allAttributes = this.getAttributeManager().getAttributes();\n      scenegraph.traverse(model => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  _applyAnimationsProp(scenegraph, animator, animationsProp) {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n\n    // sort() to ensure '*' comes first so that other values can override\n    Object.keys(animationsProp)\n      .sort()\n      .forEach(key => {\n        // Key can be:\n        //  - number for index number\n        //  - name for animation name\n        //  - * to affect all animations\n        const value = animationsProp[key];\n\n        if (key === '*') {\n          animations.forEach(animation => {\n            Object.assign(animation, value);\n          });\n        } else if (Number.isFinite(Number(key))) {\n          const number = Number(key);\n          if (number >= 0 && number < animations.length) {\n            Object.assign(animations[number], value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        } else {\n          const findResult = animations.find(({name}) => name === key);\n          if (findResult) {\n            Object.assign(findResult, value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        }\n      });\n  }\n\n  _deleteScenegraph() {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  addVersionToShader(source) {\n    if (isWebGL2(this.context.gl)) {\n      return `#version 300 es\\n${source}`;\n    }\n\n    return source;\n  }\n\n  getLoadOptions() {\n    const modules = ['project32', 'picking'];\n    const {_lighting, _imageBasedLightingEnvironment} = this.props;\n\n    if (_lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    let env = null;\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({gl: this.context.gl, layer: this});\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        vs: this.addVersionToShader(vs),\n        fs: this.addVersionToShader(fs),\n        modules,\n        isInstanced: true\n      },\n      // tangents are not supported\n      useTangents: false\n    };\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({attributesAvailable: true});\n    if (!this.state.scenegraph) return;\n\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}, context}) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.animationProps.time);\n    }\n\n    const {sizeScale} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {worldMatrix}) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          sceneModelMatrix: worldMatrix,\n          // Needed for PBR (TODO: find better way to get it)\n          u_Camera: model.model.program.uniforms.project_uCameraPosition\n        }\n      });\n    });\n  }\n\n  calculateInstancePositions64xyLow(attribute, {startRow, endRow}) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const point of iterable) {\n      objectInfo.index++;\n      const position = getPosition(point, objectInfo);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n}\n\nScenegraphLayer.layerName = 'ScenegraphLayer';\nScenegraphLayer.defaultProps = defaultProps;\n"],"file":"scenegraph-layer.js"}