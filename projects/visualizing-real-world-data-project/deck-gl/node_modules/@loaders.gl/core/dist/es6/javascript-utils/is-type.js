var isBoolean = x => typeof x === 'boolean';

var isFunction = x => typeof x === 'function';

var isObject = x => x !== null && typeof x === 'object';

export var isPromise = x => isObject(x) && isFunction(x.then);
export var isIterable = x => x && typeof x[Symbol.iterator] === 'function';
export var isAsyncIterable = x => x && typeof x[Symbol.asyncIterator] === 'function';
export var isIterator = x => x && isFunction(x.next);
export var isFetchResponse = x => typeof Response !== 'undefined' && x instanceof Response || x.arrayBuffer && x.text && x.json;
export var isFile = x => typeof File !== 'undefined' && x instanceof File;
export var isBlob = x => typeof Blob !== 'undefined' && x instanceof Blob;
export var isFileReadable = x => isFile(x) || isBlob(x);
export var isWritableDOMStream = x => {
  return isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);
};
export var isReadableDOMStream = x => {
  return isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.pipeTo) && isFunction(x.getReader);
};
export var isWritableNodeStream = x => {
  return isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);
};
export var isReadableNodeStream = x => {
  return isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);
};
export var isReadableStream = x => isReadableDOMStream(x) || isReadableNodeStream(x);
export var isWritableStream = x => isWritableDOMStream(x) || isWritableNodeStream(x);
//# sourceMappingURL=is-type.js.map