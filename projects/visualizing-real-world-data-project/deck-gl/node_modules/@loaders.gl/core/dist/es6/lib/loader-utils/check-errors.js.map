{"version":3,"sources":["../../../../src/lib/loader-utils/check-errors.js"],"names":["checkFetchResponseStatus","response","ok","errorMessage","status","text","error","Error","checkFetchResponseStatusSync"],"mappings":";AAAA,gBAAsBA,wBAAtB;AAAA;AAAA;;;gDAAO,WAAwCC,QAAxC,EAAkD;AACvD,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAIC,YAAY,0BAAmBF,QAAQ,CAACG,MAA5B,MAAhB;;AACA,UAAI;AACF,YAAMC,IAAI,SAASJ,QAAQ,CAACI,IAAT,EAAnB;AACAF,QAAAA,YAAY,IAAIE,IAAhB;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc,CAEf;;AACD,YAAM,IAAIC,KAAJ,CAAUJ,YAAV,CAAN;AACD;AACF,G;;;;AAED,OAAO,SAASK,4BAAT,CAAsCP,QAAtC,EAAgD;AACrD,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAM,IAAIK,KAAJ,wBAA0BN,QAAQ,CAACG,MAAnC,EAAN;AACD;AACF","sourcesContent":["export async function checkFetchResponseStatus(response) {\n  if (!response.ok) {\n    let errorMessage = `fetch failed ${response.status} `;\n    try {\n      const text = await response.text();\n      errorMessage += text;\n    } catch (error) {\n      // ignore error\n    }\n    throw new Error(errorMessage);\n  }\n}\n\nexport function checkFetchResponseStatusSync(response) {\n  if (!response.ok) {\n    throw new Error(`fetch failed ${response.status}`);\n  }\n}\n"],"file":"check-errors.js"}