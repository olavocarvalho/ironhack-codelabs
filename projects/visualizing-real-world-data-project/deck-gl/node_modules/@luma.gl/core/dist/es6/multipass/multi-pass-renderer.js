import CompositePass from './composite-pass';
import RenderState from './render-state';
export default class MultiPassRenderer extends CompositePass {
  constructor(gl) {
    let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    props = Array.isArray(props) ? {
      passes: props
    } : props;
    super(gl, Object.assign({
      id: 'multi-pass'
    }, props));
    this.renderState = new RenderState(gl, props);
  }

  render(animationProps) {
    this.renderState.reset();
    const {
      passes = []
    } = this.props;

    for (const pass of passes) {
      pass.render(this.renderState, animationProps);
    }

    return this;
  }

}
//# sourceMappingURL=multi-pass-renderer.js.map