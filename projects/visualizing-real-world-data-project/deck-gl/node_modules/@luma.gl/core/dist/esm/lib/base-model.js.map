{"version":3,"sources":["../../../src/lib/base-model.js"],"names":["isWebGL","Query","Program","VertexArray","clear","MODULAR_SHADERS","assembleShaders","getDebugTableForUniforms","getDebugTableForVertexArray","getDebugTableForProgramConfiguration","addModel","removeModel","logModel","getOverrides","log","isObjectEmpty","uid","assert","LOG_DRAW_PRIORITY","LOG_DRAW_TIMEOUT","BaseModel","gl","props","id","lastLogTime","initialize","_setBaseModelProps","program","_createProgram","vertexArray","userData","needsRedraw","_attributes","attributes","animatedUniforms","animated","animationLoop","timerQueryEnabled","timeElapsedQuery","undefined","lastQueryReturned","stats","accumulatedFrameTime","averageFrameTime","profileFrameCount","pickable","setUniforms","Object","assign","getModuleUniforms","moduleSettings","key","uniforms","_extractAnimatedUniforms","opts","framebuffer","transformFeedback","parameters","animationProps","setAttributes","updateModuleSettings","_refreshAnimationProps","logPriority","_logDrawCallStart","drawParams","getDrawParams","isInstanced","warn","isIndexed","indexType","indexOffset","instanceCount","noop","onBeforeRender","onAfterRender","_timerQueryStart","didDraw","draw","drawMode","getDrawMode","vertexCount","getVertexCount","offset","_timerQueryEnd","_logDrawCallEnd","isSupported","_setAnimationProps","_animationProps","_animationLoop","vs","fs","modules","defines","inject","shaderCache","varyings","bufferMode","x","assembleResult","getProgram","getUniforms","uniformName","valueFunction","foundAnimated","newValue","staticUniforms","beginTimeElapsedQuery","end","isResultAvailable","elapsedTime","getTimerMilliseconds","lastFrameTime","priority","logDrawTimeout","Date","now","group","collapsed","attributeTable","header","uniformTable","table","unusedTable","unusedCount","undefinedOnly","missingTable","missingCount","count","keys","configTable","configuration","message","groupEnd"],"mappings":"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","sourcesContent":["// Shared code between Model and MeshModel\n\nimport GL from '@luma.gl/constants';\nimport {isWebGL, Query, Program, VertexArray, clear} from '@luma.gl/webgl';\nimport {MODULAR_SHADERS, assembleShaders} from '@luma.gl/shadertools';\nimport {\n  getDebugTableForUniforms,\n  getDebugTableForVertexArray,\n  getDebugTableForProgramConfiguration\n} from '@luma.gl/webgl';\nimport {addModel, removeModel, logModel, getOverrides} from '../debug/seer-integration';\nimport {log, isObjectEmpty, uid, assert} from '../utils';\n\nconst LOG_DRAW_PRIORITY = 2;\nconst LOG_DRAW_TIMEOUT = 10000;\n\n// Model abstract O3D Class\nexport default class BaseModel {\n  constructor(gl, props = {}) {\n    assert(isWebGL(gl));\n    const {id = uid('base-model')} = props;\n    this.id = id;\n    this.gl = gl;\n    this.id = props.id || uid('Model');\n    this.lastLogTime = 0; // TODO - move to probe.gl\n    this.initialize(props);\n    this._setBaseModelProps(props);\n  }\n\n  initialize(props) {\n    this.props = {};\n    this.program = this._createProgram(props);\n\n    // Create a vertex array configured after this program\n    this.vertexArray = new VertexArray(this.gl, {program: this.program});\n\n    // Initialize state\n    this.userData = {};\n    this.needsRedraw = true;\n\n    // Attributes and buffers\n    // Model manages auto Buffer creation from typed arrays\n    this._attributes = {}; // All attributes\n    this.attributes = {}; // User defined attributes\n\n    // Model manages uniform animation\n    this.animatedUniforms = {};\n    this.animated = false;\n    this.animationLoop = null; // if set, used as source for animationProps\n\n    this.timerQueryEnabled = false;\n    this.timeElapsedQuery = undefined;\n    this.lastQueryReturned = true;\n\n    this.stats = {\n      accumulatedFrameTime: 0,\n      averageFrameTime: 0,\n      profileFrameCount: 0\n    };\n\n    // picking options\n    this.pickable = true;\n\n    this._setBaseModelProps(props);\n\n    // Make sure we have some reasonable default uniforms in place\n    this.setUniforms(\n      Object.assign(\n        {},\n        this.getModuleUniforms(), // Get all default uniforms\n        this.getModuleUniforms(props.moduleSettings) // Get unforms for supplied parameters\n      )\n    );\n  }\n\n  setProps(props) {\n    this._setBaseModelProps(props);\n  }\n\n  delete() {\n    // delete all attributes created by this model\n    // TODO - should buffer deletes be handled by vertex array?\n    for (const key in this._attributes) {\n      if (this._attributes[key] !== this.attributes[key]) {\n        this._attributes[key].delete();\n      }\n    }\n\n    this.program.delete();\n    this.vertexArray.delete();\n\n    removeModel(this.id);\n  }\n\n  // GETTERS\n\n  isAnimated() {\n    return this.animated;\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  getUniforms() {\n    return this.program.uniforms;\n  }\n\n  // SETTERS\n\n  // TODO - should actually set the uniforms\n  setUniforms(uniforms = {}) {\n    // Let Seer override edited uniforms\n    uniforms = Object.assign({}, uniforms);\n    getOverrides(this.id, uniforms);\n\n    // Resolve any animated uniforms so that we have an initial value\n    uniforms = this._extractAnimatedUniforms(uniforms);\n\n    this.program.setUniforms(uniforms);\n\n    return this;\n  }\n\n  updateModuleSettings(opts) {\n    const uniforms = this.getModuleUniforms(opts || {});\n    return this.setUniforms(uniforms);\n  }\n\n  // DRAW CALLS\n\n  clear(opts) {\n    clear(this.program.gl, opts);\n    return this;\n  }\n\n  /* eslint-disable max-statements  */\n  drawGeometry(opts = {}) {\n    const {\n      moduleSettings = null,\n      framebuffer,\n      uniforms = {},\n      attributes = {},\n      transformFeedback = this.transformFeedback,\n      parameters = {},\n      vertexArray = this.vertexArray,\n      animationProps\n    } = opts;\n\n    // Update module settings\n\n    addModel(this);\n\n    // Update model with any just provided attributes, settings or uniforms\n    this.setAttributes(attributes);\n    this.updateModuleSettings(moduleSettings);\n    this.setUniforms(uniforms);\n\n    // Animate any function valued uniforms\n    this._refreshAnimationProps(animationProps);\n\n    const logPriority = this._logDrawCallStart(2);\n\n    const drawParams = this.vertexArray.getDrawParams(this.props);\n    if (drawParams.isInstanced && !this.isInstanced) {\n      log.warn('Found instanced attributes on non-instanced model', this.id)();\n    }\n\n    const {isIndexed, indexType, indexOffset} = drawParams;\n    const {isInstanced, instanceCount} = this;\n\n    const noop = () => {};\n    const {onBeforeRender = noop, onAfterRender = noop} = this.props;\n\n    onBeforeRender();\n\n    this._timerQueryStart();\n\n    const didDraw = this.program.draw(\n      Object.assign({}, opts, {\n        logPriority,\n        uniforms: null, // Already set (may contain \"function values\" not understood by Program)\n        framebuffer,\n        parameters,\n        drawMode: this.getDrawMode(),\n        vertexCount: this.getVertexCount(),\n        vertexArray,\n        transformFeedback,\n        isIndexed,\n        indexType,\n        isInstanced,\n        instanceCount,\n        offset: isIndexed ? indexOffset : 0\n      })\n    );\n\n    this._timerQueryEnd();\n\n    onAfterRender();\n\n    this._logDrawCallEnd(logPriority, vertexArray, framebuffer);\n\n    return didDraw;\n  }\n  /* eslint-enable max-statements  */\n\n  // PRIVATE METHODS\n\n  // eslint-disable-next-line max-statements, complexity\n  _setBaseModelProps(props) {\n    Object.assign(this.props, props);\n\n    if ('uniforms' in props) {\n      this.setUniforms(props.uniforms);\n    }\n\n    if ('pickable' in props) {\n      this.pickable = props.pickable;\n    }\n\n    // if ('onBeforeRender' in props) {}\n    // if ('onAfterRender' in props) {}\n\n    // Experimental props\n    if ('timerQueryEnabled' in props) {\n      this.timerQueryEnabled = props.timerQueryEnabled && Query.isSupported(this.gl, ['timers']);\n      if (props.timerQueryEnabled && !this.timerQueryEnabled) {\n        log.warn('GPU timer not supported')();\n      }\n    }\n\n    if ('_animationProps' in props) {\n      this._setAnimationProps(props._animationProps);\n    }\n\n    if ('_animationLoop' in props) {\n      this.animationLoop = props._animationLoop;\n    }\n  }\n\n  _createProgram({\n    vs = null,\n    fs = null,\n    // 1: Modular shaders\n    modules = null,\n    defines = {},\n    inject = {},\n    shaderCache = null,\n    // TransformFeedback\n    varyings = null,\n    bufferMode = GL.SEPARATE_ATTRIBS,\n    program = null\n  }) {\n    this.getModuleUniforms = x => {};\n\n    const id = this.id;\n\n    if (!program) {\n      // Assign default shaders if none are provided\n      vs = vs || MODULAR_SHADERS.vs;\n      fs = fs || MODULAR_SHADERS.fs;\n\n      const assembleResult = assembleShaders(this.gl, {vs, fs, modules, inject, defines, log});\n      ({vs, fs} = assembleResult);\n\n      if (shaderCache) {\n        program = shaderCache.getProgram(this.gl, {id, vs, fs});\n      } else {\n        program = new Program(this.gl, {id, vs, fs, varyings, bufferMode});\n      }\n\n      this.getModuleUniforms = assembleResult.getUniforms || (x => {});\n    }\n\n    assert(program instanceof Program, 'Model needs a program');\n    return program;\n  }\n\n  // Refreshes animated uniforms, attempting to get animated props from animationLoop if registered\n  _refreshAnimationProps(animationProps) {\n    // Try to read animationProps\n    animationProps = animationProps || (this.animationLoop && this.animationLoop.animationProps);\n    if (animationProps) {\n      this._setAnimationProps(animationProps);\n    }\n  }\n\n  // Calculate new values for any function uniforms based on supplied animationProps\n  _evaluateAnimateUniforms(animationProps) {\n    if (!this.animated) {\n      return {};\n    }\n    const animatedUniforms = {};\n    for (const uniformName in this.animatedUniforms) {\n      const valueFunction = this.animatedUniforms[uniformName];\n      animatedUniforms[uniformName] = valueFunction(animationProps);\n    }\n    return animatedUniforms;\n  }\n\n  // Extracts a list of function valued uniforms, so we can update them before each draw call\n  // Also removes such uniforms from the returned list\n  _extractAnimatedUniforms(uniforms) {\n    let foundAnimated = false;\n\n    // Keep our animatedUniforms map up-to-date\n    for (const uniformName in uniforms) {\n      const newValue = uniforms[uniformName];\n      if (typeof newValue === 'function') {\n        this.animatedUniforms[uniformName] = newValue;\n        foundAnimated = true;\n      } else {\n        delete this.animatedUniforms[uniformName];\n      }\n    }\n\n    // Update animated flag: `Model` is animated if any uniforms are animated (i.e. functions)\n    this.animated = !isObjectEmpty(this.animatedUniforms);\n\n    if (!foundAnimated) {\n      return uniforms;\n    }\n\n    // If animated uniforms were found, remove them from ordinary uniform list\n    // `Program` class can't (and shouldn't) handle function valued uniforms\n    const staticUniforms = {};\n    for (const uniformName in uniforms) {\n      if (!this.animatedUniforms[uniformName]) {\n        staticUniforms[uniformName] = uniforms[uniformName];\n      }\n    }\n    return staticUniforms;\n  }\n\n  // Timer Queries\n\n  _timerQueryStart() {\n    if (this.timerQueryEnabled === true) {\n      if (!this.timeElapsedQuery) {\n        this.timeElapsedQuery = new Query(this.gl);\n      }\n      if (this.lastQueryReturned) {\n        this.lastQueryReturned = false;\n        this.timeElapsedQuery.beginTimeElapsedQuery();\n      }\n    }\n  }\n\n  _timerQueryEnd() {\n    if (this.timerQueryEnabled === true) {\n      this.timeElapsedQuery.end();\n      // TODO: Skip results if 'gl.getParameter(this.ext.GPU_DISJOINT_EXT)' returns false\n      // should this be incorporated into Query object?\n      if (this.timeElapsedQuery.isResultAvailable()) {\n        this.lastQueryReturned = true;\n        const elapsedTime = this.timeElapsedQuery.getTimerMilliseconds();\n\n        // Update stats (e.g. for seer)\n        this.stats.lastFrameTime = elapsedTime;\n        this.stats.accumulatedFrameTime += elapsedTime;\n        this.stats.profileFrameCount++;\n        this.stats.averageFrameTime =\n          this.stats.accumulatedFrameTime / this.stats.profileFrameCount;\n\n        // Log stats\n        log.log(\n          LOG_DRAW_PRIORITY,\n          `\\\nGPU time ${this.program.id}: ${this.stats.lastFrameTime}ms \\\naverage ${this.stats.averageFrameTime}ms \\\naccumulated: ${this.stats.accumulatedFrameTime}ms \\\ncount: ${this.stats.profileFrameCount}`\n        )();\n      }\n    }\n  }\n\n  _logDrawCallStart(priority) {\n    const logDrawTimeout = priority > 3 ? 0 : LOG_DRAW_TIMEOUT;\n    if (log.priority < priority || Date.now() - this.lastLogTime < logDrawTimeout) {\n      return undefined;\n    }\n\n    this.lastLogTime = Date.now();\n\n    log.group(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`, {collapsed: log.priority <= 2})();\n\n    return priority;\n  }\n\n  _logDrawCallEnd(priority, vertexArray, uniforms, framebuffer) {\n    // HACK: priority === undefined means logDrawCallStart didn't run\n    if (priority === undefined) {\n      return;\n    }\n\n    const attributeTable = getDebugTableForVertexArray({\n      vertexArray,\n      header: `${this.id} attributes`,\n      attributes: this._attributes\n    });\n\n    const {table: uniformTable, unusedTable, unusedCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms)\n    });\n\n    // log missing uniforms\n    const {table: missingTable, count: missingCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms),\n      undefinedOnly: true\n    });\n\n    if (missingCount > 0) {\n      log.log('MISSING UNIFORMS', Object.keys(missingTable))();\n      // log.table(priority, missingTable)();\n    }\n    if (unusedCount > 0) {\n      log.log('UNUSED UNIFORMS', Object.keys(unusedTable))();\n      // log.log(priority, 'Unused uniforms ', unusedTable)();\n    }\n\n    const configTable = getDebugTableForProgramConfiguration(this.vertexArray.configuration);\n\n    log.table(priority, attributeTable)();\n\n    log.table(priority, uniformTable)();\n\n    log.table(priority + 1, configTable)();\n\n    logModel(this, uniforms);\n\n    if (framebuffer) {\n      framebuffer.log({priority: LOG_DRAW_PRIORITY, message: `Rendered to ${framebuffer.id}`});\n    }\n\n    log.groupEnd(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`)();\n  }\n}\n"],"file":"base-model.js"}